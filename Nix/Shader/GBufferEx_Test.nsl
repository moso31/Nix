Params
{
	Tex2D : txAlbedo
	Tex2D : txNormalMap
	Tex2D : txMetallicMap
	Tex2D : txRoughnessMap
	Tex2D : txAmbientOcclusionMap
	SamplerState : ssLinearWrap
	CBuffer : m_material
	{
		float3 : albedo
		float3 : normal
		float : metallic
		float : roughness
		float : ao
	}
}

Code
{
	Output.GBufferA = float4(input.posVS.xyz, 1.0f);

	float3 normalMap = txNormalMap.Sample(ssLinearWrap, input.tex).xyz;
	float3 normal = m_material.normal * normalMap;
	float3 N = TangentSpaceToViewSpace(normal, input.normVS, input.tangentVS);
	Output.GBufferB = float4(N, 1.0f);

	float3 albedoMap = txAlbedo.Sample(ssLinearWrap, input.tex).xyz;
	float3 albedo = m_material.albedo * albedoMap;
	Output.GBufferC = float4(albedo, 1.0f);

	float metallicMap = txMetallicMap.Sample(ssLinearWrap, input.tex).x;
	float metallic = m_material.metallic * metallicMap;

	float roughnessMap = txRoughnessMap.Sample(ssLinearWrap, input.tex).x;
	float roughness = m_material.roughness * roughnessMap;

	float AOMap = txAmbientOcclusionMap.Sample(ssLinearWrap, input.tex).x;
	float ao = m_material.ao * AOMap;

	Output.GBufferD = float4(roughness, metallic, ao, 1.0f);
}
