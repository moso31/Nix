************************ 新环境配置 ************************
需要告知用户安装windows 10 SDK

后续工作：
	将FBX SDK集成到NIX内部，避免每次转换工作环境的时候都报错
	但代价是集成了很多非原创代码。

************************ 实时渲染 ************************

缺少SSAO
	参考Unity HDRP的SSAO实现方案
	【公司任务】对 Unity HDRP SSAO 进行性能分析，并编写相关文档

GBuffer
	GBuffer现在是有了，但CubeMap完全消失了。
	另外关于渲染循环的设计存在疑问：是应该对每个RT循环独立的Primitives（现行做法），还是应该对每个Primitives渲染四次RT？

缺少ShadowMap
缺少TAA
缺少Bloom
缺少DOF
缺少Motion Blur

缺少区域光源

************************* NXGUI *************************
旋转的时候仍然存在万向锁的问题

************************ 功能杂项 ************************

缺少String-Int类型的相互转换。

************************ 离线渲染 ************************

照明系统会出现一些问题：
	对有四个球形光源的MIS测试场景：
		漫反射背景墙几乎没有返回颜色值。【预测多少应该有较暗的反射颜色】
		光源本身存在灰点【原因不明，但很可能不正常。光源的任何位置都应该是标准的白色】
		将反射板改为镜面反射材质后测试，较大的光源中会存在灰点【但不一定是有问题，可能是MIS本身的特性】

Irradiance Cache已经加上了，但是某些情况下，间接漫反射照明会存在比较小的黑点。
	目前已知的测试例子：以一个比较低的视角仰视一个CornellBox场景中的漫反射球，可能会在地面附近区域存在黑点。
		（Irradiance Cache理论上可以确保每个像素得到至少一个预估值。出现黑点代表周围预估Cache数量=0，而自己也没有进行精确计算，是不应该出现的异常情况。）

Irradiance Cache后面还有两个主要的优化方向还没有做：
	Irradiance Cache可以进一步进行梯度优化
	Irradiance Cache可以使用八叉树进行查找优化

没有测试光源照向表面背面时的情况
	虽然Nix目前规定NXRayTracer中不透明表面不分正反面，但是没有对这种情况进行过哪怕是基本的测试。
	建议后续设置一个光源-表面A背面-表面B正面的模型，以检测表面A、表面B的照明情况是否正常。